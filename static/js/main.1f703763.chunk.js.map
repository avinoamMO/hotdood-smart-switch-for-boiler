{"version":3,"sources":["assets/morgan.png","components/sidebar.js","components/status/ToggleButton.js","components/status/DialController.js","components/status/Status.js","components/analytics/UsersDeviceUsageTimeBarChart.js","components/analytics/YearlyUsageTrendLineChart.js","components/analytics/Analytics.js","components/schedules/Schedule.js","components/schedules/AddSchdueleMenu.js","components/schedules/Schedules.js","components/settings/Settings.js","components/Login.js","components/settings/ManageUsers.js","components/settings/ManageDevice.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","sidebar","props","react_default","a","createElement","BurgerMenu","width","Link","to","id","ToggleButton","handleButtonClick","_this","switchRelayMode","dialValue","this","switchStatus","className","type","name","checked","value","onClick","Component","dialController","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","es","min","max","stepSize","radius","arcSize","color","onChange","changeDialValue","sliced","bgColor","Status","handleChangeDialValue","setState","calculateMinsToString","mins","concat","showCountDownTimer","timeString","console","log","DialController_dialController","ToggleButton_ToggleButton","label","turnOnTimerRendering","handleTurnOnTimerRendering","UsersDeviceUsageTimeBarChart","deviceUsageByUsers","ResponsiveContainer","height","BarChart","layout","data","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","YearlyUsageTrendLineChart","yearlyUsageData","LineChart","margin","top","right","left","bottom","Line","stroke","activeDot","r","Analytics","getOperationRecords","UsersDeviceUsageTimeBarChart_UsersDeviceUsageTimeBarChart","AnswerRef","Text","UsageInHours","RespondentPercentage","Rank","YearlyUsageTrendLineChart_YearlyUsageTrendLineChart","date","count","pv","amt","Schedule","deleteSchedule","returnDayOfWeekByNum","dayNum","parseInt","split","timeOfDay","dayOfWeek","actionType","AddSchdueleMenu","handleElementChange","e","target","defineProperty","sendNewSchedule","saveSchedule","timeOn","timeOff","sunday","monday","tuesday","wednsday","thursday","friday","saturday","closePopUp","duration","Schedules","handleCallPopUp","renderAddSchduele","handleClosePopUp","handlesaveNewEvent","setNewSchedule","handleDeleteSchedule","deleteAnEvent","getSchedules","schedules","length","AddSchdueleMenu_AddSchdueleMenu","map","c","i","Schedule_Schedule","ind","Settings","Login","alt","src","Morgan","ManageUsers","getUsers","users","ManageDevice","App","interavlValueInMinutes","rp","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","JSON","parse","schedule_rules","isScheduleOn","schedule","stop","_ref2","_callee2","sch","_context2","operationrecords","_x","apply","arguments","_ref3","_callee3","_context3","stringify","_x2","dataLoaded","timerInterval","status","getSwitchStatus","BrowserRouter","pageWrapId","outerContainerId","Route","path","exact","render","Status_Status","Analytics_Analytics","Schedules_Schedules","ManageUsers_ManageUsers","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f703763.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/morgan.8a1947c5.png\";","// docs : https://github.com/negomi/react-burger-menu#animations\r\nimport { Link} from 'react-router-dom'\r\n\r\nimport React from \"react\";\r\nimport { fallDown as Menu } from \"react-burger-menu\";\r\n\r\n\r\nexport default props => {\r\n  return (\r\n    \r\n    <Menu width=\"55%\" >\r\n      \r\n      <Link to='/status'>Status</Link>\r\n      <Link to='/schedules'>Schedules</Link>\r\n      <Link to='/analytics'>Analytics</Link>\r\n      <Link to='/settings'>Settings</Link>\r\n      <Link id= 'logoutButton' to='/'>Logout</Link>\r\n    </Menu>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ToggleButton extends Component {\r\n  handleButtonClick = () => {\r\n    this.props.switchRelayMode(this.props.dialValue);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.switchStatus !== null) {\r\n      return (\r\n        <div id=\"toggleButton\">\r\n          \r\n          {\r\n            <form>\r\n              <input\r\n                className=\"ch\"\r\n                type=\"checkbox\"\r\n                name=\"temperature\"\r\n                checked={this.props.switchStatus}\r\n                value={true}\r\n                onClick={this.handleButtonClick}\r\n              />\r\n            </form>\r\n          }\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>lost connection to device</div>;\r\n    }\r\n  }\r\n}\r\n","import Roundy from 'roundy';\r\nimport React, { Component } from 'react';\r\n\r\n// Roundy: https://github.com/themre/roundy\r\n\r\nexport default class dialController extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={value:0}\r\n    }\r\n\r\n    render(){\r\n        //TODO: roundy needs to retrieve value  when initialized.\r\n        return(\r\n            <div>\r\n        <Roundy\r\n         value={this.props.dialValue}\r\n         min={0}\r\n         max={120}\r\n         stepSize={1}\r\n         radius={140}\r\n         arcSize={360}\r\n         color='black'\r\n         onChange={value => this.props.changeDialValue(value)}      \r\n         sliced={true}\r\n         bgColor='gray'\r\n      /> \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport ToggleButton from \"./ToggleButton\";\r\nimport DialController from \"./DialController\";\r\n// TODO: implement countdown ; import Countdown from \"react-countdown-now\"\r\n\r\nexport default class Status extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { dialValue: 0, showCountDownTimer: false };\r\n  }\r\n  handleChangeDialValue = value => {\r\n    this.setState({ dialValue: value });\r\n  };\r\n  calculateMinsToString = () => {\r\n    let mins = this.state.dialValue;\r\n    if (mins === 0) {\r\n      return ``;\r\n    }\r\n    if (mins < 60) {\r\n      return `${mins}m`;\r\n    }\r\n    if (mins === 60) {\r\n      return `1hr`;\r\n    }\r\n    if (mins > 60 && mins < 120) {\r\n      return `1hr${mins - 60}m`;\r\n    }\r\n\r\n    if (mins === 120) {\r\n      return `2hrs`;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let timeString = this.calculateMinsToString();\r\n    console.log('moishe')\r\n    return (\r\n      <div className=\"statusPage\">\r\n      \r\n        <div id=\"dialController\">\r\n          <DialController\r\n            dialValue={this.state.dialValue}\r\n            changeDialValue={this.handleChangeDialValue}\r\n          />\r\n        </div>\r\n        \r\n        <div id=\"dialDigit\">\r\n          <b>{timeString}</b>\r\n        </div>\r\n        <div id=\"toggleButtonDiv\">\r\n          <ToggleButton\r\n            label=\"\"\r\n            switchStatus={this.props.switchStatus}\r\n            switchRelayMode={this.props.switchRelayMode}\r\n            dialValue={this.state.dialValue}\r\n            changeDialValue={this.handleChangeDialValue}\r\n            turnOnTimerRendering={this.handleTurnOnTimerRendering}\r\n          />\r\n        </div>\r\n        <center>\r\n          {/* TODO: add quick action buttons */}\r\n        </center> \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BarChart, CartesianGrid , XAxis, YAxis, Tooltip, Legend, Bar, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n// \"AnswerRef\": \"two\",\r\n// \"Text\": \"Avinoam\",\r\n// \"Score\": 0,\r\n// \"RespondentPercentage\": 32,\r\n// \"Rank\": 2\r\n\r\nexport default class UsersDeviceUsageTimeBarChart extends Component{\r\n    render(){\r\n            \r\n        if(this.props.deviceUsageByUsers===null)\r\n        {\r\n            return(\r\n                <div>Loading device usage by users bar chart</div>\r\n            )\r\n        }\r\n        else{\r\n        return(\r\n            <div id=\"UsageBarChart\">\r\n                <center>This month's usage by users</center>\r\n         <ResponsiveContainer width={300} height={300}>\r\n         <BarChart layout={\"horizontal\"} width={250} height={250} data={this.props.deviceUsageByUsers}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"Text\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"UsageInHours\" fill=\"#8884d8\" />\r\n         </BarChart>\r\n         </ResponsiveContainer>\r\n         </div>\r\n         )\r\n    }\r\n}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n \r\nexport default class YearlyUsageTrendLineChart extends Component{\r\n    render(){\r\n\r\n        // const data = [];\r\n            // if(this.props.yearlyUsageData!=null){\r\n            //     this.props.yearlyUsageData.map(c=>{\r\n            //     let newDay =\r\n            //     {\r\n            //         year: c._id.year,\r\n            //         month: c._id.month,\r\n            //         day: c._id.day,\r\n            //         date: c._id.day+\"/\"+c._id.month+\"/\"+c._id.year,\r\n            //         count: c.count\r\n            //     }\r\n            //     data.push(newDay)\r\n                // return null // Added this to eliminate compile warning.\r\n            // })\r\n        \r\n        if(this.props.yearlyUsageData!=null)\r\n        {\r\n        return(\r\n            <div>\r\n               {/* Usage since: {data[data.length-1].date}*  */}\r\n                                <p/>\r\n         <ResponsiveContainer width={350} height={175}>\r\n         <LineChart width={600} height={300} data={this.props.yearlyUsageData}\r\n            margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n            <XAxis dataKey=\"date\"/>\r\n            <YAxis/>\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <Tooltip/>\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"count\" stroke=\"red\" activeDot={{r: 8}}/>\r\n            </LineChart>\r\n         </ResponsiveContainer>\r\n         </div>\r\n         )\r\n        }\r\n        else{\r\n            return(<div>loading...</div>)\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport UsersDeviceUsageTimeBarChart from './UsersDeviceUsageTimeBarChart'\r\nimport YearlyUsageTrendLineChart from './YearlyUsageTrendLineChart'\r\nexport default class Analytics extends Component {\r\n  componentDidMount(){\r\n    \r\n    this.props.getOperationRecords();\r\n  }\r\n\r\n  render() {\r\n\r\n// Mock data:    \r\n    const deviceUsageByUsers = [ \r\n      {\r\n        \"AnswerRef\": \"one\",\r\n        \"Text\": \"Lidor\",\r\n        \"UsageInHours\": 20,\r\n        \"RespondentPercentage\": 12,\r\n        \"Rank\": 1\r\n      },\r\n      {\r\n        \"AnswerRef\": \"two\",\r\n        \"Text\": \"Avinoam\",\r\n        \"UsageInHours\": 2,\r\n        \"RespondentPercentage\": 32,\r\n        \"Rank\": 2\r\n      },\r\n      {\r\n        \"AnswerRef\": \"three\",\r\n        \"Text\": \"Netta\",\r\n        \"UsageInHours\": 10,\r\n        \"RespondentPercentage\": 41,\r\n        \"Rank\": 3\r\n      },\r\n      {\r\n        \"AnswerRef\": \"four\",\r\n        \"Text\": \"Guest\",\r\n        \"UsageInHours\": 5,\r\n        \"RespondentPercentage\": 16,\r\n        \"Rank\": 4\r\n      }\r\n  ];\r\n  \r\n// Mock data:\r\n  const yearlyUsageData = [\r\n    {date: 'Page A', count: 4000, pv: 2400, amt: 2400},\r\n    {date: 'Page B', count: 3000, pv: 1398, amt: 2210},\r\n    {date: 'Page C', count: 2000, pv: 9800, amt: 2290},\r\n    {date: 'Page D', count: 2780, pv: 3908, amt: 2000},\r\n    {date: 'Page E', count: 1890, pv: 4800, amt: 2181},\r\n    {date: 'Page F', count: 2390, pv: 3800, amt: 2500},\r\n    {date: 'Page G', count: 3490, pv: 4300, amt: 2100},\r\n  ]\r\n\r\n    return (\r\n        <div className=\"AnalyticsPage\">\r\n      <UsersDeviceUsageTimeBarChart deviceUsageByUsers={deviceUsageByUsers}/>  \r\n      <YearlyUsageTrendLineChart yearlyUsageData={yearlyUsageData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n  \r\nexport default class Schedule extends Component {\r\n\r\n  deleteSchedule = () =>{\r\n    this.props.deleteSchedule(this.props.data);\r\n    \r\n  }\r\n  returnDayOfWeekByNum = (dayNum) =>{\r\n    \r\n    if(parseInt(dayNum)===0){\r\n      return \"Monday\"\r\n    }\r\n    if(parseInt(dayNum)===1){\r\n      return \"Tuesday\"\r\n    }\r\n    if(parseInt(dayNum)===2){\r\n      return \"Wednsday\"\r\n    }\r\n    if(parseInt(dayNum)===3){\r\n      return \"Thursday\"\r\n    }\r\n    if(parseInt(dayNum)===4){\r\n      return \"Friday\"\r\n    }\r\n    if(parseInt(dayNum)===5){\r\n      return \"Saturday\"\r\n    }\r\n    if(parseInt(dayNum)===6){\r\n      return \"Sunday\"\r\n    }\r\n  }\r\n  render() {\r\n      this.props.data.split(\"-\")\r\n      let timeOfDay = this.props.data.split(\"-\")[0] \r\n      let dayOfWeek = this.returnDayOfWeekByNum(this.props.data.split(\"-\")[1])\r\n      let actionType = this.props.data.split(\"-\")[2] \r\n      // 0-time\r\n      // 1-day\r\n      // 2-action\r\n    return (\r\n    <div>\r\n    <span id=\"event\">\r\n      Every {dayOfWeek} turn {actionType} at {timeOfDay}\r\n      \r\n      \r\n      </span>\r\n      <span onClick={this.deleteSchedule} id=\"eventxbutton\">X</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class AddSchdueleMenu extends Component{\r\n    constructor (){\r\n        super()\r\n        this.state = {\r\n                            timeOn: \"00:00\",\r\n                            timeOff: \"00:00\", \r\n                            duration : \"0\",\r\n                            sunday : false,\r\n                            monday : false,\r\n                            tuesday : false,\r\n                            wednsday : false,\r\n                            thursday : false,\r\n                            friday : false,\r\n                            saturday : false\r\n                     }\r\n    }\r\n    handleElementChange=(e)=>{\r\n        \r\n        if(e.target.value===\"on\"){\r\n            this.setState({[e.target.name] : e.target.checked})\r\n        }\r\n        else{\r\n            this.setState({[e.target.name] : e.target.value})\r\n        }\r\n    }\r\n    sendNewSchedule = () =>{\r\n    this.props.saveSchedule({\r\n                            timeOn: this.state.timeOn,\r\n                            timeOff: this.state.timeOff,\r\n                            sunday : this.state.sunday,\r\n                            monday : this.state.monday,\r\n                            tuesday : this.state.tuesday,\r\n                            wednsday : this.state.wednsday,\r\n                            thursday : this.state.thursday,\r\n                            friday : this.state.friday,\r\n                            saturday : this.state.saturday \r\n                        })\r\n    this.props.closePopUp();\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"AddSchduelePopUpMenu\">            \r\n                <div className=\"AddSchduelePopUpMenuContents\">            \r\n                <p/>        \r\n                ON:  <input type=\"Time\"  name=\"timeOn\" onChange={this.handleElementChange} /> \r\n                <p/>\r\n                OFF: <input type=\"Time\" name=\"timeOff\" onChange={this.handleElementChange} />\r\n        \r\n                <p/>\r\n                Every:\r\n                <p/>\r\n                <label>\r\n                <input type=\"checkbox\" name={\"sunday\"} onChange={this.handleElementChange} /> \r\n                <span>Sunday</span>\r\n                </label><p/>\r\n                <label>\r\n                <input type=\"checkbox\" name={\"monday\"} onChange={this.handleElementChange}/>\r\n                <span>Monday</span>\r\n                </label><p/>\r\n                <label>\r\n                <input type=\"checkbox\" name={\"tuesday\"} onChange={this.handleElementChange} />\r\n                <span>Tuesday</span>\r\n                </label><p/>\r\n                <label>\r\n                <input type=\"checkbox\" name={\"wednsday\"} onChange={this.handleElementChange}/>\r\n                <span>Wednsday</span>\r\n                </label><p/>\r\n                <label>\r\n                <input type=\"checkbox\" name={\"thursday\"} onChange={this.handleElementChange}/>\r\n                <span>Thursday</span>\r\n                </label><p/>\r\n                <label>\r\n                <input type=\"checkbox\" name={\"friday\"} onChange={this.handleElementChange}/>\r\n                <span>Friday</span>\r\n                </label><p/>\r\n                <label>\r\n                <input type=\"checkbox\" name={\"saturday\"} onChange={this.handleElementChange}/>\r\n                <span>Saturday</span>\r\n                </label><p/>\r\n                </div>\r\n                <p/>\r\n                <center>\r\n                <button id=\"saveEventButton\" onClick={this.sendNewSchedule}>Add</button><button id=\"cancelEventButton\" onClick={this.props.closePopUp}>Cancel</button>\r\n                </center>\r\n        </div>)\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Schedule from './Schedule'\r\nimport AddSchdueleMenu from './AddSchdueleMenu'\r\n\r\nexport default class Schedules extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = ({renderAddSchduele : false})\r\n  \r\n  }\r\n  componentDidMount(){\r\n   \r\n    this.props.getSchedules();\r\n    \r\n  }\r\n  handleCallPopUp = ()=>{\r\n    this.setState({renderAddSchduele : true})\r\n\r\n  }\r\n  \r\n  handleClosePopUp = ()=>{\r\n    this.setState({renderAddSchduele : false})\r\n\r\n  }\r\n\r\n  handlesaveNewEvent = (e) => {\r\n    this.props.setNewSchedule(e);\r\n    console.log(e)\r\n  }\r\n\r\n  handleDeleteSchedule = (e) => {\r\n    this.props.deleteAnEvent(e);\r\n    this.props.getSchedules();\r\n  }\r\n  render() {\r\n    if(this.props.schedules!==false){\r\n    }\r\n    if(this.props.schedules!=null){\r\n      if(this.props.schedules.length>0){\r\n        \r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n      \r\n      <div className=\"SchedulesPage\">\r\n      {this.state.renderAddSchduele ? <AddSchdueleMenu closePopUp={this.handleClosePopUp} saveSchedule={this.handlesaveNewEvent} /> : null}\r\n      <div id=\"scheduleHeadline\">Schedules</div>\r\n      <div id=\"listOfCurrentSchedules\">\r\n      {this.props.schedules!=null? this.props.schedules.map((c,i)=>{return <Schedule ind={i} data={c} deleteSchedule={this.handleDeleteSchedule}/>}) : <div>loading...</div>}\r\n      </div>\r\n      <div id=\"addScheduleButton\"><button onClick={this.handleCallPopUp}>Add a schedule</button></div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Settings extends Component {\r\n  \r\n  render() {\r\n    return (\r\n    <div className=\"SettingsPage\">\r\n      <Link to='/settings/manageUsers'>Manage Users</Link><p/>\r\n      <Link to='/settings/manageDevice'>Manage Device</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link} from 'react-router-dom'\r\n\r\nimport Morgan from '../assets/morgan.png'\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"LoginPage\">\r\n      <center>\r\n          <p/>\r\n      Welcome back, Morgan.\r\n      <Link to='/status'><img alt='users profile' width=\"50%\" height=\"50%\" src={Morgan}/></Link>\r\n\r\n      <p/>\r\n      Not you?<p/> sign in as another user.\r\n      </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class ManageUsers extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getUsers(); \r\n  }\r\n\r\n  render() {\r\n      // Make this a popup menu.\r\n      if(this.props.users!=null){\r\n      }\r\n    return (\r\n      <div className=\"ManageUsersPage\">\r\n      User photo, Remove User, Make Admin, Limit usage/Kid mode\r\n      <p/>Add a new user\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class ManageDevice extends Component {\r\n  render() {\r\n      // Make this a popup menu.\r\n    return (\r\n      <div className=\"ManageDevicePage\">\r\n        Maximal 'ON' time : <input type=\"text\" value=\"#\"></input><p/>\r\n\r\n        Send SMS message after X amount of minutes to Phone#\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport rp from \"request-promise\";\r\nimport \"./css/App.css\";\r\nimport \"./css/styles.css\";\r\nimport SideBar from \"./components/sidebar\";\r\nimport Status from \"./components/status/Status\";\r\nimport Analytics from \"./components/analytics/Analytics\";\r\nimport Schedules from \"./components/schedules/Schedules\";\r\nimport Settings from \"./components/settings/Settings\";\r\nimport Login from \"./components/Login\";\r\nimport ManageUsers from \"./components/settings/ManageUsers\";\r\nimport ManageDevice from \"./components/settings/ManageDevice\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      switchStatus: null,\r\n      dataLoaded: false,\r\n      schedules: null,\r\n      timerInterval: null\r\n    };\r\n  }\r\n  async getSwitchStatus() {\r\n    let status = await rp(`http://localhost:3007/status`);\r\n    this.setState({ switchStatus: JSON.parse(status) });\r\n  }\r\n  switchRelayMode = (interavlValueInMinutes, props) => {\r\n    rp(`http://localhost:3007/switchRelayMode/${interavlValueInMinutes * 60}`);\r\n    this.setState({ switchStatus: !this.state.switchStatus });\r\n  };\r\n\r\n  getSchedules = async () => {\r\n    let data = await rp(`http://localhost:3007/getSchedules`);\r\n    data = JSON.parse(data);\r\n    this.setState({\r\n      schedules: data.schedule_rules,\r\n      isScheduleOn: data.schedule\r\n    });\r\n  };\r\n\r\n  setNewSchedule = async sch => {\r\n    console.log(sch);\r\n    let data = await rp(`http://localhost:3007/saveNewEvent/${sch}`);\r\n    // data = JSON.stringify(data);\r\n    console.log(data);\r\n    this.setState({ operationrecords: data });\r\n\r\n    this.getSchedules();\r\n  };\r\n\r\n  deleteAnEvent = async sch => {\r\n    sch = JSON.stringify(sch);\r\n    let data = await rp(`http://localhost:3007/deleteAnEvent/${sch}`);\r\n    data = JSON.parse(data);\r\n    this.setState({ operationrecords: data });\r\n    this.getSchedules();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getSwitchStatus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\r\n          <Route\r\n            path=\"/status\"\r\n            exact\r\n            render={() => (\r\n              <Status\r\n                switchStatus={this.state.switchStatus}\r\n                switchRelayMode={this.switchRelayMode}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route path=\"/analytics\" exact render={() => <Analytics />} />\r\n\r\n          <Route\r\n            path=\"/schedules\"\r\n            exact\r\n            render={() => (\r\n              <Schedules\r\n                getSchedules={this.getSchedules}\r\n                setNewSchedule={this.setNewSchedule}\r\n                deleteAnEvent={this.deleteAnEvent}\r\n                schedules={this.state.schedules}\r\n                isScheduleOn={this.state.isScheduleOn}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/settings/manageUsers\"\r\n            exact\r\n            render={() => <ManageUsers />}\r\n          />\r\n          <Route path=\"/settings\" exact component={Settings} />\r\n          <Route path=\"/settings/manageDevice\" exact component={ManageDevice} />\r\n          <Route path=\"/\" exact component={Login} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}